% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_random_effects.R
\name{extract_random_effects}
\alias{extract_random_effects}
\alias{extract_random_effects.merMod}
\alias{extract_random_effects.glmmTMB}
\alias{extract_random_effects.lme}
\alias{extract_random_effects.brmsfit}
\alias{extract_random_effects.stanreg}
\alias{extract_random_effects.gam}
\title{Extract random effects}
\usage{
extract_random_effects(
  model,
  re = NULL,
  ci_level = 0.95,
  digits = 3,
  add_group_N = FALSE,
  component = NULL,
  ...
)

\method{extract_random_effects}{merMod}(
  model,
  re = NULL,
  ci_level = 0.95,
  digits = 3,
  add_group_N = FALSE,
  ...
)

\method{extract_random_effects}{glmmTMB}(
  model,
  re = NULL,
  ci_level = 0.95,
  digits = 3,
  add_group_N = FALSE,
  component = "cond",
  ...
)

\method{extract_random_effects}{lme}(
  model,
  re = NULL,
  ci_level = NULL,
  digits = 3,
  add_group_N = FALSE,
  ...
)

\method{extract_random_effects}{brmsfit}(
  model,
  re = NULL,
  ci_level = 0.95,
  digits = 3,
  add_group_N = FALSE,
  component = NULL,
  ...
)

\method{extract_random_effects}{stanreg}(
  model,
  re = NULL,
  ci_level = 0.95,
  digits = 3,
  add_group_N = FALSE,
  component = NULL,
  ...
)

\method{extract_random_effects}{gam}(
  model,
  re = NULL,
  ci_level = 0.95,
  digits = 3,
  add_group_N = FALSE,
  ...
)
}
\arguments{
\item{model}{An appropriate model. See details.}

\item{re}{The name of the grouping variable for the random effects. Default
is \code{NULL} to return all.}

\item{ci_level}{Where possible, confidence level < 1, typically above 0.90. A
value of 0 will not report it. Default is .95. Not applicable to nlme
objects.}

\item{digits}{Rounding. Default is 3.}

\item{add_group_N}{Add group sample sizes to output? Default is \code{FALSE}.}

\item{component}{For \code{glmmTMB} objects, which of the two components 'cond' or
'zi' to select. Default is 'cond'. For \code{brmsfit} objects, this can filter
results to a certain part of the output, e.g. 'sigma' or 'zi' of
distributional models, or a specific outcome name of a multivariate model.
In this case \code{component} is a regular expression that ends the name of the
parameters of the output (e.g. '__component').}

\item{...}{Other arguments specific to the method. Unused at present.}
}
\value{
data frame of the random effects
}
\description{
Extracts the random effects and their standard errors.
}
\details{
Relative to \code{ranef} for the various packages, this just adds the
standard errors and cluster ids as columns, and uncertainty intervals.

Current models supported:

\describe{
\item{merMod}{}
\item{glmmTMB}{}
\item{brms}{}
\item{nlme}{}
\item{brms}{}
\item{rstanarm}{}
\item{mgcv}{}
}
}
\note{
The nlme package only provides the estimated random effect parameters,
not their uncertainty, so it isn't provided.

\code{merMod} and \code{glmmTMB} objects results are based on the estimated
conditional variances, i.e. \code{condvar = TRUE}.  This is likely an
underestimate relative to brms results.

For mgcv, the \code{Vp} (Bayesian) estimated variance covariance matrix is
used.
}
\examples{
library(lme4)
library(mixedup)

lmer_model <- lmer(Reaction ~ Days + (1 + Days | Subject), data = sleepstudy)
extract_random_effects(lmer_model)

}
\seealso{
\code{\link[lme4:ranef]{lme4::ranef()}},
\code{\link[glmmTMB:ranef.glmmTMB]{glmmTMB::ranef()}},
\code{\link[nlme:random.effects]{nlme::ranef()}},
\code{\link[brms:ranef.brmsfit]{brms::ranef()}},
\code{\link[rstanarm:stanreg-methods]{rstanarm::ranef()}},
\code{\link[mgcv:gamObject]{mgcv::gamObject()}},
\code{\link[mgcv:smooth.construct.re.smooth.spec]{mgcv::smooth.construct.re.smooth.spec()}}

Other extract: 
\code{\link{extract_cor_structure}()},
\code{\link{extract_fixed_effects}()},
\code{\link{extract_het_var}()},
\code{\link{extract_model_data}()},
\code{\link{extract_random_coefs}()},
\code{\link{extract_vc}()}
}
\concept{extract}
